---
title: Teamwork Challenge & Competition
layout: no-menu
---
{% assign path_components = page.path|split:'/' %}
{% assign id = include.id|default:path_components[-2] %}
{% assign session = site.data.sessions[id] %}
= {{ session.title }} =

Chairs: [[{{ site.baseurl }}/people/urkedal|{{ site.data.people['urkedal'].name }}]] & [[{{ site.baseurl }}/people/roblitz|{{ site.data.people['roblitz'].name }}]]

== Introduction ==

The objective of the two combined sessions is to work in teams
drawing members from different projects in NeIC. You'll get to
build a robot and program it to meet challenges and to compete
against the other teams.

We are planning to split all AHM participants into four teams of
equal size.

== Logistics ==
<div id="smallbottommargin">
{|class="wikitable"
|- style="text-align: left;"
| '''Start:''' || Wednesday, Jan 27th, 15:00
|-
| '''End:''' || Wednesday, Jan 27th, 18:30
|}
</div>
Coffee will be served around 16:30.

== Preparation ==

'''Note, information is tentative as we're looking into securing
the necessary hardware.'''

We will use the [http://www.makeblock.cc/starter-robot-kit/ Makeblock Robot Starter Kit (IR)] as a basis, and may add 1-2 additional sensors plus some mechanical parts for increased construction capabilities.

You'll need an Arduino programming environment on your laptop. Details will be described in the coming weeks.

'''Have fun!'''

== Software ==

You can program the Arduino board using an IDE or a Makefile.  Since time is limited during the challenge, we suggest you install the software in advance and try to compile a program.  During the session, the board is connected to a USB port and behaves like a serial device.

=== Using the IDE ===

Installation and usage of the IDE for different platforms is described on the [http://learn.makeblock.cc/learning-arduino/ Arduino Programming] page.

If you are using Ubuntu, the <tt>arduino</tt> package contains the needed software except for the Makeblock library.

=== Using a Makefile ===

The [https://github.com/sudar/Arduino-Makefile Arduino-Makefile] allows building and uploading programs to the Arduino from the command line.  Ubuntu provides this as arduino-mk.  If you use the sources, make sure you also insatll base arduino tools and libraries.  Also check out the [https://github.com/Makeblock-official/Makeblock-Library Makeblock-Library] somewhere.

Once the dependencies are in place, create a fresh directory containing the program with a <tt>.cpp</tt> suffix and a Makefile which might look something like

 ARDUINO_PORT = /dev/ttyUSB0
 BOARD_TAG = uno
 ARDUINO_LIBS = SoftwareSerial Wire makeblock
 USER_LIB_PATH = $(HOME)/ahm16/Makeblock-Library

 include /usr/share/arduino/Arduino.mk

Adjust <tt>USER_LIB_PATH</tt> and the include according to where you installed the software.  Now, typing make will pick up the single source file in the directory, and compile it.  Once you have access to the hardware you can also

 make upload
 make monitor

The latter starts a screen session connected to USB serial link.

== External Documentation ==

Official documentation from Makeblock:
* [http://learn.makeblock.cc/orion/ Me Orion mainboard] including an example using the built-in motor shield.
* [http://learn.makeblock.cc/starter_robot_kit/ Starter Kit Mechanical Construction]. This page describes just the tank, but the linked PDF at the bottom is the full manual which is included on paper in the kit.
* [http://learn.makeblock.cc/learning-arduino/ Arduino Programming] using the IDE, but containing other useful information, as well.
* Additional shields:
** [http://learn.makeblock.cc/ultrasonic-sensor/ Me Ultrasonic Sensor].
** [http://wiki.makeblock.cc/index.php?title=Me-Infrared_Receiver_Decode Me Infrared Receiver].
* Alternative Arduino libraries for Makeblock components:
** [https://github.com/Makeblock-official/Makeblock-Library Makeblock-Library]: All in one file, works with the arduino-mk package in Ubuntu 14.04.
** [https://github.com/Makeblock-official/Makeblock-Libraries Makeblock-Libraries]: One source file for each component.
