---
title: Teamwork Challenge & Competition
layout: no-menu
---
{% assign path_components = page.path|split:'/' %}
{% assign id = include.id|default:path_components[-2] %}
{% assign session = site.data.sessions[id] %}
= {{ session.title }} =

Chairs: [[{{ site.baseurl }}/people/urkedal|{{ site.data.people['urkedal'].name }}]] & [[{{ site.baseurl }}/people/roblitz|{{ site.data.people['roblitz'].name }}]]

== Introduction ==

The objective of the two combined sessions is to work in teams
drawing members from different projects in NeIC. You'll get to
build a robot and program it to meet challenges and to compete
against the other teams.

We are planning to split all AHM participants into four teams of
equal size.

== Logistics ==
<div id="smallbottommargin">
{|class="wikitable"
|- style="text-align: left;"
| '''Start:''' || Wednesday, Jan 27th, 15:00
|-
| '''End:''' || Wednesday, Jan 27th, 18:30
|}
</div>

=== Detailed Schedule ===

<div id="smallbottommargin">
{|class="wikitable"
|- style="text-align: left;"
| '''Introduction''' || 15:00 - 15:05
|-
| '''Construction phase''' || 15:05 - 17:55
|-
| '''Gather for the competition''' || 17:55 - 18:00
|-
| '''Competition 1st round''' || 18:00 - 18:05
|-
| '''Competition 2nd round''' || 18:10 - 18:15
|-
| '''Competition 3rd round''' || 18:20 - 18:25
|-
| '''And the winner is''' || 18:25 - 18:30
|}
</div>

Coffee will be served around 16:30.

== Teams ==

We have distributed the participants over four teams. You may get in contact with eachother already now to prepare for the challenge.

<div id="smallbottommargin">
<table>
<tr>
<th style="background: #F03020; padding-left:8px; padding-right:8px;">Team Red</th>
<th style="background: #F8C040; padding-left:8px; padding-right:8px;">Team Yellow</th>
<th style="background: #4080F0; padding-left:8px; padding-right:8px;">Team Blue</th>
<th style="background: #18A008; padding-left:8px; padding-right:8px;">Team Green</th>
</tr>
<tr>
<td style="background: #F03020; padding-left:8px; padding-right:8px;">Ingemar</td>
<td style="background: #F8C040; padding-left:8px; padding-right:8px;">Christian</td>
<td style="background: #4080F0; padding-left:8px; padding-right:8px;">Daniel</td>
<td style="background: #18A008; padding-left:8px; padding-right:8px;">Diba</td>
</tr>
<tr>
<td style="background: #F03020; padding-left:8px; padding-right:8px;">Erik</td>
<td style="background: #F8C040; padding-left:8px; padding-right:8px;">Rob</td>
<td style="background: #4080F0; padding-left:8px; padding-right:8px;">Gerd</td>
<td style="background: #18A008; padding-left:8px; padding-right:8px;">Dmytro</td>
</tr>
<tr>
<td style="background: #F03020; padding-left:8px; padding-right:8px;">Erland</td>
<td style="background: #F8C040; padding-left:8px; padding-right:8px;">Ali</td>
<td style="background: #4080F0; padding-left:8px; padding-right:8px;">Abdulrahman</td>
<td style="background: #18A008; padding-left:8px; padding-right:8px;">Antti</td>
</tr>
<tr>
<td style="background: #F03020; padding-left:8px; padding-right:8px;">Dan</td>
<td style="background: #F8C040; padding-left:8px; padding-right:8px;">Magnus</td>
<td style="background: #4080F0; padding-left:8px; padding-right:8px;">John</td>
<td style="background: #18A008; padding-left:8px; padding-right:8px;">PÃ¥l</td>
</tr>
<tr>
<td style="background: #F03020; padding-left:8px; padding-right:8px;">Olav</td>
<td style="background: #F8C040; padding-left:8px; padding-right:8px;">Lars</td>
<td style="background: #4080F0; padding-left:8px; padding-right:8px;">Uwe</td>
<td style="background: #18A008; padding-left:8px; padding-right:8px;">Dejan</td>
</tr>
<tr>
<td style="background: #F03020; padding-left:8px; padding-right:8px;">Mattias</td>
<td style="background: #F8C040; padding-left:8px; padding-right:8px;">Michaela</td>
<td style="background: #4080F0; padding-left:8px; padding-right:8px;">Oxana</td>
<td style="background: #18A008; padding-left:8px; padding-right:8px;">Ulf</td>
</tr>
<tr>
<td style="background: #F03020; padding-left:8px; padding-right:8px;">Linn</td>
<td style="background: #F8C040; padding-left:8px; padding-right:8px;">Joel</td>
<td style="background: #4080F0; padding-left:8px; padding-right:8px;">Gudmund</td>
<td style="background: #18A008; padding-left:8px; padding-right:8px;">Pontus</td>
</tr>
<tr>
<td style="background: #F03020; padding-left:8px; padding-right:8px;">Niclas</td>
<td style="background: #F8C040; padding-left:8px; padding-right:8px;">Jens</td>
<td style="background: #4080F0; padding-left:8px; padding-right:8px;">Jonas</td>
<td style="background: #18A008; padding-left:8px; padding-right:8px;">Jaako</td>
</tr>
</table>
</div>


== Preparation ==

We will use the [http://www.makeblock.cc/starter-robot-kit/ Makeblock Robot Starter Kit (IR)] as a basis, and may add 1-2 additional sensors plus some mechanical parts for increased construction capabilities.

You'll need an Arduino programming environment on your laptop. Details incl a hands-on mini-challenge are described below.

If you want to verify before the actual challenge that you can actually upload an image from you laptop to the Makeblock Orion board, please let us know and we find a time slot on Monday or Tuesday.

=== Software ===

You can program the Arduino board using an IDE or a Makefile.  Since time is limited during the challenge, we suggest you install the software in advance and try to compile a program. In addition to the IDE or makefile-based environment, you'll need the Makeblock library which let's you easily program different electronic modules and includes a number of examples.

During the session, the board is connected to a USB port and behaves like a serial device.

==== Using the IDE ====

Installation and usage of the IDE for different platforms is described on the [http://learn.makeblock.cc/learning-arduino/ Arduino Programming] page. The page links to a relatively old version (1.0.6) of the Arduino IDE. You may also get the most recent stable version (1.6.7) from [https://www.arduino.cc www.arduino.cc].

If you are using Ubuntu, the <tt>arduino</tt> package contains the needed software except for the Makeblock library.

The Makeblock library is available from [http://learn.makeblock.cc/learning-arduino/#Step2-Install-Makeblock-Library-for-Arduino learn.makeblock.cc]. Follow the instructions at page to install it.

==== Using a Makefile ====

The [https://github.com/sudar/Arduino-Makefile Arduino-Makefile] allows building and uploading programs to the Arduino from the command line.  Ubuntu provides this as arduino-mk.  If you use the sources, make sure you also insatll base arduino tools and libraries.  Also check out the [https://github.com/Makeblock-official/Makeblock-Library Makeblock-Library] somewhere.

Once the dependencies are in place, create a fresh directory containing the program with a <tt>.cpp</tt> suffix and a Makefile which might look something like

 ARDUINO_PORT = /dev/ttyUSB0
 BOARD_TAG = uno
 ARDUINO_LIBS = SoftwareSerial Wire makeblock
 USER_LIB_PATH = $(HOME)/ahm16/Makeblock-Library

 include /usr/share/arduino/Arduino.mk

Adjust <tt>USER_LIB_PATH</tt> and the include according to where you installed the software.  Now, typing make will pick up the single source file in the directory, and compile it.  Once you have access to the hardware you can also

 make upload
 make monitor

The latter starts a screen session connected to USB serial link.

==== Understanding the Makeblock Orion Board ====

[http://learn.makeblock.cc/orion/ Makeblock Orion] contains valuable information about the Arduino board and its ports.

==== Sample Program for Communicating with Available Electronics ====

During the challenge, you'll have access to two motors, a 7-segment display, an ultrasonic sensor and two micro switches. The following program code might be used as a starting point. Note, due to the actual wiring of your robot you may need to invert/change values or tests ... you'll figure this out ;)

 //#include "Makeblock.h"
 #include "MeOrion.h"  // either this include or Makeblock.h, depending on version of the Makeblock library

 MeUltrasonicSensor us(PORT_3); // note, electronics may only be connected to a subset of the ports
 Me7SegmentDisplay sd(PORT_4);
 MeLimitSwitch switch1(PORT_7,SLOT2); // note, the switches may only work on slot2 of the RJ25 adapters
 MeDCMotor mr(M1);
 MeDCMotor ml(M2);

 void setup()
 {
 }

 void loop()
 {
   // read from ultrasonic sensor
   double distance = us.distanceCm();

   // display 2016 on 7-segment module
   sd.display(2016);

   // turn on motor (increasing speed)
   for(int i = 1; i <= 256; i = i<<1)
   {
     ml.run(i - 1); // speed value range is [-255,255]
     delay(1000); // let the motor spin for 1000 ms
     mr.run(-i + 1); // speed value range is [-255,255]
     delay(1000); // let the motor spin for 1000 ms
   }

   // test micro switch
   for(int i = 0; i < 10; i++)
   {
     if (switch1.touched())
     {
       sd.display(1);
       delay(1000);
     } else {
       sd.display(0);
       delay(1000);
     }
   }
 }

== Testing and Mini-Challenge before the Event ==

If you want to try to program an Arduino before we meet in Skeikampen, send an email to urkedal at nbi.dk with your SSH key to get access to a test host.  The host is connected to an Arduino which is connected to 4 LEDs and 3 photoresistors.  Please note that everybody logged in shares the same Arduino, so you will need to take turns if more than one is logged in at the time.

Here are a few things to try:

'''Task 0.1.''' Copy /opt/ahm16-arduino/sample to your directory, then try to compile, upload, and monitor.  Make a few modifications to convince yourself how it works.

'''Task 0.2.''' The photoresistors picks up light from both the ambient environment and the LEDs.  You control one but not the other.  How can you precisly measure how much light intensity hitting a photoresister from just one of the LEDs?  Try it!

'''Task 0.3.''' Determine the intensity on the first two photoresistors from of each of the first four LEDs.  Can you say something about the arragement?

== External Documentation ==

Official documentation from Makeblock:
* [http://learn.makeblock.cc/orion/ Me Orion mainboard] including an example using the built-in motor shield.
* [http://learn.makeblock.cc/starter_robot_kit/ Starter Kit Mechanical Construction]. This page describes just the tank, but the linked PDF at the bottom is the full manual which is included on paper in the kit.
* [http://learn.makeblock.cc/learning-arduino/ Arduino Programming] using the IDE, but containing other useful information, as well.
* Additional shields:
** [http://learn.makeblock.cc/ultrasonic-sensor/ Me Ultrasonic Sensor].
** [http://wiki.makeblock.cc/index.php?title=Me-Infrared_Receiver_Decode Me Infrared Receiver].
* Alternative Arduino libraries for Makeblock components:
** [https://github.com/Makeblock-official/Makeblock-Library Makeblock-Library]: All in one file, works with the arduino-mk package in Ubuntu 14.04.
** [https://github.com/Makeblock-official/Makeblock-Libraries Makeblock-Libraries]: One source file for each component.
